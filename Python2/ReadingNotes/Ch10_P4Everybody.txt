TUPLES:
- A tuple 1 is a sequence of values much like a list. The values stored in a tuple can be any type, and they are indexed by integers. The important difference is that tuples are immutable. Tuples are also comparable and hashable so we can sort lists of them and use tuples as key values in Python dictionaries.
- If the argument is a sequence (string, list, or tuple), the result of the call to tuple is a tuple with the elements of the sequence.
- Decorate: a sequence by building a list of tuples with one or more sort keys preceding the elements from the sequence; Sort: the list of tuples using the Python built-in sort; Undecorate: by extracting the sorted elements of the sequence.
- tuples are hashable and lists are not, if we want to create a composite key to use in a dictionary we must use a tuple as the key.
- To start with the obvious, strings are more limited than other sequences because the elements have to be characters. They are also immutable. If you need the ability to change the characters in a string (as opposed to creating a new string),
you might want to use a list of characters instead. Lists are more common than tuples, mostly because they are mutable. But there
are a few cases where you might prefer tuples: 
1. In some contexts, like a return statement, it is syntactically simpler to create a tuple than a list. In other contexts, you might prefer a list.
2. If you want to use a sequence as a dictionary key, you have to use an immutable type like a tuple or string.
3. If you are passing a sequence as an argument to a function, using tuples reduces the potential for unexpected behavior due to aliasing.
- Lists, dictionaries and tuples are known generically as data structures.
- Compound data structures are useful, but they are prone to what I call shape errors; that is, errors caused when a data structure has the wrong type, size, or composition.

GLOSSARY:
comparable - A type where one value can be checked to see if it is greater than, less than, or equal to another value of the same type. Types which are comparable can be put in a list and sorted.
data structure - A collection of related values, often organized in lists, dictionaries, tuples, etc.
DSU - Abbreviation of “decorate-sort-undecorate”, a pattern that involves building a list of tuples, sorting, and extracting part of the result.
gather - The operation of assembling a variable-length argument tuple.
hashable - A type that has a hash function. Immutable types like integers, floats, and strings are hashable; mutable types like lists and dictionaries are not.
scatter - The operation of treating a sequence as a list of arguments.
shape  (of a data structure) A summary of the type, size, and composition of a data structure.
singleton - A list (or other sequence) with a single element.
tuple - An immutable sequence of elements.
tuple assignment - An assignment with a sequence on the right side and a tuple of variables on the left. The right side is evaluated and then its elements are assigned to the variables on the left.
