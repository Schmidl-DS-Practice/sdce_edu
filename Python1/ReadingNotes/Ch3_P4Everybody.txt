Remember that = is an assignment operator and == is a comparison operator.

Finally, the not operator negates a boolean expression, so not (x > y) is true if x > y is false; that is, if x is less than or equal to y.

Handling an exception with a try statement is called catching an exception.

When the evaluation of a logical expression stops because the overall value is already known, it is called short-circuiting the evaluation.

Glossary:
body The sequence of statements within a compound statement.

boolean expression An expression whose value is either True or False.

branch One of the alternative sequences of statements in a conditional statement.

chained conditional A conditional statement with a series of alternative branches.

comparison operator One of the operators that compares its operands: ==, !=,
>, <, >=, and <=.

conditional statement A statement that controls the flow of execution depend-
ing on some condition.

condition The boolean expression in a conditional statement that determines
which branch is executed.

compound statement A statement that consists of a header and a body. The
header ends with a colon (:). The body is indented relative to the header.

guardian pattern Where we construct a logical expression with additional comparisons to take advantage of the short-circuit behavior.

logical operator One of the operators that combines boolean expressions: and,
or, and not.

nested conditional A conditional statement that appears in one of the branches
of another conditional statement.

traceback A list of the functions that are executing, printed when an exception
occurs.

short circuit When Python is part-way through evaluating a logical expression and stops the evaluation because Python knows the final value for the expression without needing to evaluate the rest of the expression.


